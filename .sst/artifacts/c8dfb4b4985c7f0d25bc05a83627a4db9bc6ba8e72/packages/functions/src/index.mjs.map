{
  "version": 3,
  "sources": ["../../../../../../packages/functions/prisma.ts", "../../../../../../packages/functions/src/index.ts"],
  "sourcesContent": ["import type { PrismaClient as ImportedPrismaClient } from \"@prisma/client\";\nimport { createRequire } from \"module\";\n\nconst require = createRequire(import.meta.url);\n\nconst { PrismaClient: RequiredPrismaClient } = require(\"@prisma/client\");\n\nconst _PrismaClient: typeof ImportedPrismaClient = RequiredPrismaClient;\n\nexport class PrismaClient extends _PrismaClient {}\n", "import { APIGatewayProxyHandlerV2 } from \"aws-lambda\";\nimport { PrismaClient } from \"../prisma\";\n\nconst client = new PrismaClient();\n\nexport const handler: APIGatewayProxyHandlerV2 = async () => {\n    // return {\n    //     statusCode: 200,\n    //     body: JSON.stringify({ message: \"Hello, World!\" }),\n    // };\n    try {\n        const result = await client.post.findMany();\n        return {\n            statusCode: 200,\n            body: JSON.stringify({ message: \"Hello, World!\" }),\n        };\n    } catch (ex: any) {\n        return {\n            statusCode: 200,\n            body: ex.toString(),\n        };\n    }\n};\n"],
  "mappings": ";;;;;;;;;AACA,SAAS,qBAAqB;AAE9B,IAAMA,WAAU,cAAc,YAAY,GAAG;AAE7C,IAAM,EAAE,cAAc,qBAAqB,IAAIA,SAAQ,gBAAgB;AAEvE,IAAM,gBAA6C;AAE5C,IAAM,eAAN,cAA2B,cAAc;AAAA,EAThD,OASgD;AAAA;AAAA;AAAC;;;ACNjD,IAAM,SAAS,IAAI,aAAa;AAEzB,IAAM,UAAoC,mCAAY;AAKzD,MAAI;AACA,UAAM,SAAS,MAAM,OAAO,KAAK,SAAS;AAC1C,WAAO;AAAA,MACH,YAAY;AAAA,MACZ,MAAM,KAAK,UAAU,EAAE,SAAS,gBAAgB,CAAC;AAAA,IACrD;AAAA,EACJ,SAAS,IAAS;AACd,WAAO;AAAA,MACH,YAAY;AAAA,MACZ,MAAM,GAAG,SAAS;AAAA,IACtB;AAAA,EACJ;AACJ,GAjBiD;",
  "names": ["require"]
}
